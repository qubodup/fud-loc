/**
* copyright            : (C) 2001-2009 Advanced Internet Designs Inc.
* email                : forum@prohost.org
* copyright            : (C) 2009 Iwan Gabovitch
* email                : qubodup@gmail.com
* $Id: post.tmpl,v 1.83 2009/02/22 00:00:37 frank Exp $
*
* This program is free software; you can redistribute it and/or modify it
* under the terms of the GNU General Public License as published by the
* Free Software Foundation; version 2 of the License.
**/

{PHP_FILE: input: post.php.t; output: post.php;}
{REF: security.tmpl}
{REF: header.tmpl}
{REF: footer.tmpl}
{REF: curtime.tmpl}
{REF: usercp.tmpl}
{REF: stats.tmpl}
{REF: draw_select_opt.tmpl}
{REF: draw_radio_opt.tmpl}
{REF: rev_fmt.tmpl}
{REF: post_opt.tmpl}
{REF: post_proc.tmpl}
{REF: replace.tmpl}
{REF: wordwrap.tmpl}
{REF: spell.tmpl}
{REF: thread_notify.tmpl}
{REF: postcheck.tmpl}
{REF: ipoll.tmpl}
{REF: imsg_edt.tmpl}
{REF: return.tmpl}
{REF: minimsg.tmpl}
{REF: allowed_user_lnk.tmpl}
{REF: logaction.tmpl}
{REF: post_common.tmpl}
{REF: th.tmpl}
{REF: is_perms.tmpl}
{REF: captcha.tmpl}
{REF: show.tmpl}

{SECTION: post_turing_test}
{MSG: register_turing}{FUNC: get_err('reg_turing')}
<input type="text" name="turing_test" value="" />
<div style="white-space: pre;">
  {FUNC: generate_turing_val($turing_res)}
  <input type="hidden" name="turing_res" value="{VAR: turing_res}" />
</div>
{SECTION: END}

{SECTION: apply_spell_changes}
<input accesskey="a" type="submit" class="button" name="btn_spell" value="{MSG: apply_spell_changes}" />
{SECTION: END}

{SECTION: signature}
{VAR: sig}
{SECTION: END}

{SECTION: preview_message}
<div id="preview">
{MSG: post_preview}
{VAR: subj}
{VAR: text}{TEMPLATE-DATA: signature}
{IF: $spell}{TEMPLATE: apply_spell_changes}{ENDIFI}
<input type="submit" class="button" value="{MSG: post_preview_btn}" tabindex="4" name="preview" />
{TEMPLATE-DATA: spell_check_button}
<input type="submit" class="button" tabindex="5" name="btn_submit" value="{VAR: label}" onclick="document.forms[\'post_form\'].submitted.value=1;" />
</div>
{SECTION: END}

{SECTION: loged_in_user shows who you're logged in as and offers a logout link}
{MSG: post_logedin_user}{VAR: usr->alias}<!--<a href="{TEMPLATE: loged_in_user_lnk}">{MSG: post_logout}</a>-->
{SECTION: END}

{SECTION: post_password if password posting enable this allows the user to enter a password}
{MSG: post_passwd}<input type="password" name="frm_passwd" value="" tabindex="1" />{FUNC: get_err('password')}
{SECTION: END}

{SECTION: create_poll}
{MSG: post_poll}<a href="javascript://" accesskey="o" onclick="window_open(\'{TEMPLATE: create_poll_lnk1}\', \'poll_creator\', 400, 300);">{MSG: post_create_poll}</a>
{SECTION: END}

{SECTION: edit_poll}
{MSG: post_poll} {VAR: poll[1]} <a href="javascript://" accesskey="o" onclick="window_open(\'{TEMPLATE: edit_poll_lnk1}\', \'poll\', 400, 300);">{MSG: post_poll_edit}</a> <input type="hidden" name="pl_del" value="" /> <a href="javascript: document.forms[\'post_form\'].pl_del.value=\'1\'; document.forms[\'post_form\'].submit();">{MSG: post_poll_delete}</a>
{SECTION: END}

{SECTION: admin_options options for moderators & admins to create announcements and sticky threads}
{MSG: post_mod_opt}
{MSG: post_thread_type} <select name="thr_ordertype">{TEMPLATE-DATA: thread_type_select}</select>
{MSG: post_thread_expiry} <select name="thr_orderexpiry">{TEMPLATE-DATA: thread_expiry_select}</select>
{SECTION: END}

{SECTION: reg_user_options various options for logged in registered users}
<input type="checkbox" name="msg_poster_notif" value="Y"{IF: $msg_poster_notif} checked="checked"{ENDIFI} />{MSG: post_notification}
{MSG: post_notification_desc}
<input type="checkbox" name="msg_show_sig" value="Y"{IF: $msg_show_sig} checked="checked"{ENDIFI} />{MSG: include_sig}
{MSG: include_sig_desc}<
{TEMPLATE-DATA: mod_post_opts}
{IF: $perms & 64 && (!$th_id || $msg_id == $thr->root_msg_id)}
	<input type="checkbox" name="thr_always_on_top" value="Y"{IF: $thr_always_on_top} checked="checked"{ENDIFI} />{MSG: post_always_on_top}
{ENDIFI}
{SECTION: END}

{SECTION: mod_post_opts}
<input type="checkbox" name="thr_locked" value="Y"{VAR: thr_locked_checked} />{MSG: post_locked}
{SECTION: END}

{SECTION: disable_smileys}
<input type="checkbox" name="msg_smiley_disabled" value="Y"{IF: $msg_smiley_disabled} checked="checked"{ENDIFI} />{MSG: disable_smilies}
{SECTION: END}

{SECTION: spell_check_button}
<input accesskey="k" type="submit" class="button" value="{MSG: spell_check_msg}" name="spell" />&nbsp;
{SECTION: END}

{SECTION: post_error an error message shown at the top of ppage if there was an error with submission}
<h4 class="ac ErrorText">{MSG: post_error_generic}</h4>
{SECTION: END}

{PAGE: moderated_forum_post}
asd{TEMPLATE: header}asdf
<div id="sidebar">
  {TEMPLATE: usercp}
</div>
<div id="main">
  <div>
  {MSG: post_moderated_forum_ttl}
		{MSG: post_moderated_forum}
		<br /><br /><form action="{TEMPLATE: moderated_forum_post_lnk3}" method="post">{DEF: _hs}
		<input type="submit" class="button" name="proceed" value="{MSG: post_proceed}" />
		<input type="hidden" name="moderated_redr" value="1" />
		</form>
  </div>
</div>
{TEMPLATE: footer}
<!--{TEMPLATE: curtime}-->
{PAGE: END}

{PAGE: POST_PAGE message posting form}
{TEMPLATE: header}
<div id="sidebar">
  {TEMPLATE: usercp}
  {TEMPLATE: postSettings}
</div>
<div id="main">
  {TEMPLATE: form_start}
  {TEMPLATE-DATA: post_error}
  {TEMPLATE-DATA: preview_message}
  {MSG: post_form}
  {IF: _uid}{TEMPLATE: loged_in_user}{ELSE}{MSG: post_not_logged_in}{ENDI}
  {IF: $frm->forum_opt & 4 && !$is_a}{TEMPLATE: post_password}{ENDIF}
  {MSG: post_forum}{VAR: frm->name}
  {MSG: post_title}<input type="text" spellcheck="true" maxlength="100" name="msg_subject" value="{VAR: msg_subject}" size="50" tabindex="2" /> {FUNC: get_err('msg_subject')}
  {IF: !$th_id || ($msg_id && $msg_id == $thr->root_msg_id)}
    {MSG: post_descr}<input size="60" type="text" name="msg_tdescr" tabindex="3" value="{VAR: msg_tdescr}" />
  {ENDIF}
  {TEMPLATE-DATA: poll}
  {TEMPLATE-DATA: admin_options}
  {FUNC: draw_post_icons((isset($_POST['msg_icon']) ? $_POST['msg_icon'] : ''))}
  {IF: $perms & 16384}{FUNC: draw_post_smiley_cntrl()}{ENDIF}
  {IF: $frm->forum_opt & 16}{TEMPLATE: fud_code_icons}{ENDIF}
  {MSG: post_body}
  {FUNC: get_err('msg_body', 1)}<textarea rows="20" cols="65" tabindex="4" wrap="virtual" id="txtb" name="msg_body" class="resizable" onkeyup="storeCaret(this);" onclick="storeCaret(this);" onselect="storeCaret(this);">{VAR: msg_body}</textarea>
  {TEMPLATE: resize_controls}

  {TEMPLATE-DATA: file_attachments}
  {IF: !_uid && $FUD_OPT_3 & 8192}{TEMPLATE: post_turing_test}{ENDIF}
  {MSG: post_options}
  {IF: _uid}{TEMPLATE: reg_user_options}{ENDIF}
  {IF: $perms & 16384}{TEMPLATE: disable_smileys}{ENDIF}
  <input type="submit" accesskey="r" class="button" value="{MSG: post_preview_btn}" tabindex="4" name="preview" />&nbsp;{TEMPLATE-DATA: spell_check_button}<input accesskey="s" type="submit" class="button" tabindex="5" name="btn_submit" value="{VAR: label}" onclick="document.forms['post_form'].submitted.value=1;" />
  {TEMPLATE-DATA: minimsg}
  </form>
</div>
{TEMPLATE: common_javascript}
{TEMPLATE: footer}
<!--{TEMPLATE: curtime}{TEMPLATE-DATA: page_stats}-->
{PAGE: END}

{SECTION: postSettings}
<ul class="sidebarlist">
  {FUNC: tmpl_post_options($frm->forum_opt, $perms)}
</ul>
{SECTION: END}

{SECTION: form_start}
  <form action="{TEMPLATE: POST_PAGE_lnk3}" method="post" id="post_form" name="post_form" enctype="multipart/form-data" onsubmit="document.forms['post_form'].btn_submit.disabled = true;">
  {DEF: _hs}
  <input type="hidden" name="submitted" value="" />
  <input type="hidden" name="reply_to" value="{VAR: reply_to}" />
  <input type="hidden" name="th_id" value="{VAR: th_id}" />
  <input type="hidden" name="frm_id" value="{VAR: frm_id}" />
  <input type="hidden" name="start" value="{VAR: start}" />
  <input type="hidden" name="msg_id" value="{VAR: msg_id}" />
  <input type="hidden" name="pl_id" value="{VAR: pl_id}" />
  <input type="hidden" name="old_subject" value="{VAR-HTML: old_subject}" />
  <input type="hidden" name="prev_loaded" value="1" />
{SECTION: END}

{SECTION: post_err_lockedthread_title}
{MSG: post_err_lockedthread_title}
{SECTION: END}

{SECTION: post_err_lockedthread_msg}
{MSG: post_err_lockedthread_msg}
{SECTION: END}

{SECTION: post_err_edttimelimit_title}
{MSG: post_err_edttimelimit_title}
{SECTION: END}

{SECTION: post_err_edttimelimit_msg}
{MSG: post_err_edttimelimit_msg}
{SECTION: END}

{SECTION: post_err_noannontopics_msg}
{MSG: post_err_noannontopics_msg2}
{SECTION: END}

{SECTION: post_err_noannonposts_msg}
{MSG: post_err_noannonposts_msg2}
{SECTION: END}

{SECTION: post_err_floodtrig_title}
{MSG: post_err_floodtrig_title}
{SECTION: END}

{SECTION: post_err_floodtrig_msg}
{MSG: post_err_floodtrig_msg}
{SECTION: END}

{SECTION: post_err_attach_size}
{MSG: post_err_attach_size}
{SECTION: END}

{SECTION: post_err_attach_ext}
{MSG: post_err_attach_ext}
{SECTION: END}

{SECTION: post_err_attach_filelimit}
{MSG: post_err_attach_filelimit}
{SECTION: END}

{SECTION: post_err_passwd}
{MSG: post_err_passwd}
{SECTION: END}

{SECTION: post_reply_update}
{MSG: post_reply_update}
{SECTION: END}

{SECTION: post_topic_update}
{MSG: post_topic_update}
{SECTION: END}

{SECTION: post_normal}
{MSG: post_normal}
{SECTION: END}

{SECTION: post_sticky}
{MSG: post_sticky}
{SECTION: END}

{SECTION: post_annoncement}
{MSG: post_annoncement}
{SECTION: END}

{SECTION: create_thread}
{MSG: create_thread}
{SECTION: END}

{SECTION: submit_reply}
{MSG: submit_reply}
{SECTION: END}

{SECTION: edit_message}
{MSG: edit_message}
{SECTION: END}

{SECTION: fud_quote quote style for FUD code enabled forums}
[quote title={MSG: post_quote_msg}]{VAR: msg_body}[/quote]
{SECTION: END}

{SECTION: html_quote quote style for html enabled forums}
{MSG: post_quote_msg}{VAR: msg_body}
{SECTION: END}

{SECTION: plain_quote quoting style for plain text forums}
{MSG: post_quote} {MSG: post_quote_msg}<br />----------------------------------------------------<br />{VAR: msg_body}<br />----------------------------------------------------<br />
{SECTION: END}

{SECTION: th_expr_never}
{MSG: th_expr_never}
{SECTION: END}

{SECTION: th_expr_one_hr}
{MSG: th_expr_one_hr}
{SECTION: END}

{SECTION: th_expr_three_hr}
{MSG: th_expr_three_hr}
{SECTION: END}

{SECTION: th_expr_four_hr}
{MSG: th_expr_four_hr}
{SECTION: END}

{SECTION: th_expr_eight_hr}
{MSG: th_expr_eight_hr}
{SECTION: END}

{SECTION: th_expr_sixteen_hr}
{MSG: th_expr_sixteen_hr}
{SECTION: END}

{SECTION: th_expr_one_day}
{MSG: th_expr_one_day}
{SECTION: END}

{SECTION: th_expr_two_day}
{MSG: th_expr_two_day}
{SECTION: END}

{SECTION: th_expr_four_day}
{MSG: th_expr_four_day}
{SECTION: END}

{SECTION: th_expr_one_week}
{MSG: th_expr_one_week}
{SECTION: END}

{SECTION: th_expr_two_week}
{MSG: th_expr_two_week}
{SECTION: END}

{SECTION: th_expr_one_month}
{MSG: th_expr_one_month}
{SECTION: END}

{SECTION: th_expr_two_month}
{MSG: th_expr_two_month}
{SECTION: END}

{SECTION: th_expr_four_month}
{MSG: th_expr_four_month}
{SECTION: END}

{SECTION: th_expr_one_year}
{MSG: th_expr_one_year}
{SECTION: END}

{SECTION: reply_prefix used to check if the subject needs it added}
{MSG: post_re}
{SECTION: END}

{SECTION: post_mod_msg_notify_title}
{MSG: post_mod_msg_notify_title}
{SECTION: END}

{SECTION: post_mod_msg_notify_msg}
{MSG: post_mod_msg_notify_msg}
{SECTION: END}

{SECTION: loged_in_user_lnk}
{ROOT}?t=login&amp;{DEF: _rsid}&amp;logout=1&amp;SQ={GVAR: sq}
{SECTION: END}

{SECTION: create_poll_lnk1}
{FULL_ROOT}{ROOT}?t=poll&amp;{DEF: _rsid}&amp;frm_id={VAR: frm->id}
{SECTION: END}

{SECTION: edit_poll_lnk1}
{FULL_ROOT}{ROOT}?t=poll&amp;{DEF: _rsid}&amp;pl_id={VAR: poll[0]}&amp;frm_id={VAR: frm->id}
{SECTION: END}

{SECTION: moderated_forum_post_lnk3}
{ROOT}?t=post
{SECTION: END}

{SECTION: POST_PAGE_lnk3}
{ROOT}?t=post
{SECTION: END}

{SECTION: post_err_mod_forum_edit_ttl}
{MSG: post_err_mod_forum_edit_ttl}
{SECTION: END}

{SECTION: post_err_mod_forum_edit_msg}
{MSG: post_err_mod_forum_edit_msg}
{SECTION: END}

{SECTION: imsg_err_message_title}
{MSG: imsg_err_message_title}
{SECTION: END}

{SECTION: imsg_err_message_msg}
{MSG: imsg_err_message_msg}
{SECTION: END}
